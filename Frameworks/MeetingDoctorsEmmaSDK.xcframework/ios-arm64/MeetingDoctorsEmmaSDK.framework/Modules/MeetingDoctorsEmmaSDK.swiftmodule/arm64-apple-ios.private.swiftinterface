// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MeetingDoctorsEmmaSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import EMMA_iOS
@_exported import MeetingDoctorsEmmaSDK
import Swift
import _Concurrency
import _StringProcessing
public enum TrackParam : Swift.String {
  case option
  case status
  case gender
  case birthday
  case specialty
  public static func become(_ param: [MeetingDoctorsEmmaSDK.TrackParam : Any]) -> [Swift.String : Any]
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum TrackingOptions {
  case all
  case authenticationSuccess
  case authenticationFailed
  case userStatusChanged
  case userBannedChanged
  case customerAuthenticationSuccess
  case deauthenticationSuccess
  case deauthenticationFailed
  case socketStatusChanged
  case socketMessageReceived
  case socketMessageRead
  case styleChanged
  case messageUnreadChanged
  case messageRead
  case messageSend
  case chatEntered
  case chatLeft
  public static func == (a: MeetingDoctorsEmmaSDK.TrackingOptions, b: MeetingDoctorsEmmaSDK.TrackingOptions) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class MeetingDoctorsEmma : ObjectiveC.NSObject {
  public var isTracking: Swift.Bool {
    get
  }
  public var installationAttribution: EMMA_iOS.EMMAInstallAttribution? {
    get
  }
  public class func initialize(_ emmaKey: Swift.String, tracks: [MeetingDoctorsEmmaSDK.TrackingOptions] = [.all], availableCustomEvents: [MeetingDoctorsEmmaSDK.Tracks] = [.all])
  public class func stopTracker()
  public func startTracking()
  public func stopTracking()
  @objc deinit
  @discardableResult
  public class func track(_ event: Swift.String, params: [Swift.String : Any]? = nil) -> Swift.Bool
  @discardableResult
  public class func track(_ event: MeetingDoctorsEmmaSDK.Tracks, params: [Swift.String : Any]? = nil) -> Swift.Bool
  public class func login()
  public class func login(customerId: Swift.String, email: Swift.String?)
  public class func register(customerId: Swift.String, email: Swift.String?, andExtras: [Swift.String : Swift.String] = [:])
  public class func trackUser(_ extras: [Swift.String : Swift.String])
  @objc override dynamic public init()
}
extension MeetingDoctorsEmmaSDK.MeetingDoctorsEmma : EMMA_iOS.EMMAInstallAttributionDelegate {
  @objc dynamic public func onAttributionReceived(_ attribution: EMMA_iOS.EMMAInstallAttribution!)
}
extension MeetingDoctorsEmmaSDK.MeetingDoctorsEmma {
  public static var installationAttribution: EMMA_iOS.EMMAInstallAttribution? {
    get
  }
}
public enum Tracks : Swift.String {
  case all
  case customEvents
  case accessToProfessional
  case dividerButtonTap
  case menuOption
  case unavailableDoctors
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension MeetingDoctorsEmmaSDK.TrackParam : Swift.Equatable {}
extension MeetingDoctorsEmmaSDK.TrackParam : Swift.Hashable {}
extension MeetingDoctorsEmmaSDK.TrackParam : Swift.RawRepresentable {}
extension MeetingDoctorsEmmaSDK.TrackingOptions : Swift.Equatable {}
extension MeetingDoctorsEmmaSDK.TrackingOptions : Swift.Hashable {}
extension MeetingDoctorsEmmaSDK.Tracks : Swift.Equatable {}
extension MeetingDoctorsEmmaSDK.Tracks : Swift.Hashable {}
extension MeetingDoctorsEmmaSDK.Tracks : Swift.RawRepresentable {}
